import { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import { motion } from 'framer-motion';
import { 
  FaChartLine, FaBlog, FaImages, FaEnvelope, FaEye, 
  FaArrowUp, FaArrowDown, FaClock, FaCheckCircle,
  FaExclamationCircle, FaUsers, FaTruck, FaChartBar
} from 'react-icons/fa';
import { 
  LineChart, Line, BarChart, Bar, PieChart, Pie, Cell,
  XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer 
} from 'recharts';
import { blogService, galleryService, contactService } from '../../services/apiService';

const Dashboard = () => {
  const [stats, setStats] = useState({
    totalBlogs: 0,
    publishedBlogs: 0,
    totalGallery: 0,
    totalContacts: 0,
    newContacts: 0,
  });
  const [recentBlogs, setRecentBlogs] = useState([]);
  const [recentContacts, setRecentContacts] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    fetchDashboardData();
  }, []);

  const fetchDashboardData = async () => {
    try {
      setLoading(true);
      
      // Fetch blogs
      const blogsData = await blogService.getAll({ page: 1, limit: 5 });
      const publishedCount = blogsData.blogs?.filter(b => b.isPublished).length || 0;
      setRecentBlogs(blogsData.blogs?.slice(0, 5) || []);
      
      // Fetch gallery
      const galleryData = await galleryService.getAll();
      
      // Fetch contacts
      const contactsData = await contactService.getAll({ page: 1, limit: 5 });
      const newContactsCount = contactsData.contacts?.filter(c => c.status === 'new').length || 0;
      setRecentContacts(contactsData.contacts?.slice(0, 5) || []);
      
      setStats({
        totalBlogs: blogsData.total || 0,
        publishedBlogs: publishedCount,
        totalGallery: galleryData.total || 0,
        totalContacts: contactsData.total || 0,
        newContacts: newContactsCount,
      });
    } catch (error) {
      console.error('Error fetching dashboard data:', error);
    } finally {
      setLoading(false);
    }
  };

  const StatCard = ({ icon: Icon, title, value, subtitle, color, bgColor, link, trend, trendValue }) => (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.3 }}
      whileHover={{ y: -5 }}
    >
      <Link
        to={link}
        className={`block bg-white rounded-xl shadow-md hover:shadow-2xl transition-all duration-300 overflow-hidden border border-gray-100`}
      >
        <div className={`${bgColor} p-4`}>
          <div className="flex items-center justify-between">
            <div className="flex-1">
              <p className="text-white text-sm font-medium opacity-90">{title}</p>
              <div className="flex items-baseline space-x-2 mt-2">
                <p className="text-4xl font-bold text-white">{value}</p>
                {trend && (
                  <span className={`flex items-center text-sm ${
                    trend === 'up' ? 'text-green-200' : 'text-red-200'
                  }`}>
                    {trend === 'up' ? <FaArrowUp className="mr-1" /> : <FaArrowDown className="mr-1" />}
                    {trendValue}
                  </span>
                )}
              </div>
              {subtitle && <p className="text-sm text-white opacity-80 mt-2">{subtitle}</p>}
            </div>
            <div className={`${color} p-4 rounded-full bg-white bg-opacity-20`}>
              <Icon className="text-3xl text-white" />
            </div>
          </div>
        </div>
      </Link>
    </motion.div>
  );

  if (loading) {
    return (
      <div className="flex items-center justify-center h-full">
        <div className="text-center">
          <div className="inline-block animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600"></div>
          <p className="mt-4 text-gray-600">Loading dashboard...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      {/* Stats Grid */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        <StatCard
          icon="üìù"
          title="Total Blogs"
          value={stats.totalBlogs}
          subtitle={`${stats.publishedBlogs} published`}
          color="border-blue-500"
          link="/admin/blogs"
        />
        <StatCard
          icon="üñºÔ∏è"
          title="Gallery Images"
          value={stats.totalGallery}
          subtitle="Total uploaded"
          color="border-green-500"
          link="/admin/gallery"
        />
        <StatCard
          icon="üìß"
          title="Contact Forms"
          value={stats.totalContacts}
          subtitle={`${stats.newContacts} new`}
          color="border-orange-500"
          link="/admin/contacts"
        />
        <StatCard
          icon="üëÅÔ∏è"
          title="Website Visits"
          value="--"
          subtitle="Analytics coming soon"
          color="border-purple-500"
          link="/admin/dashboard"
        />
      </div>

      {/* Recent Content Grid */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        {/* Recent Blogs */}
        <div className="bg-white rounded-lg shadow-md p-6">
          <div className="flex items-center justify-between mb-4">
            <h2 className="text-xl font-bold">Recent Blogs</h2>
            <Link
              to="/admin/blogs"
              className="text-primary-600 hover:text-primary-700 text-sm font-medium"
            >
              View All ‚Üí
            </Link>
          </div>
          <div className="space-y-3">
            {recentBlogs.length > 0 ? (
              recentBlogs.map((blog) => (
                <div
                  key={blog._id}
                  className="flex items-start space-x-3 p-3 hover:bg-gray-50 rounded-lg transition-colors"
                >
                  {blog.featuredImage && (
                    <img
                      src={blog.featuredImage}
                      alt={blog.title}
                      className="w-16 h-16 rounded object-cover"
                    />
                  )}
                  <div className="flex-1 min-w-0">
                    <h3 className="font-medium text-gray-900 truncate">{blog.title}</h3>
                    <p className="text-sm text-gray-600 truncate">{blog.excerpt}</p>
                    <div className="flex items-center space-x-2 mt-1">
                      <span
                        className={`text-xs px-2 py-1 rounded ${
                          blog.isPublished
                            ? 'bg-green-100 text-green-800'
                            : 'bg-yellow-100 text-yellow-800'
                        }`}
                      >
                        {blog.isPublished ? 'Published' : 'Draft'}
                      </span>
                      <span className="text-xs text-gray-500">{blog.category}</span>
                    </div>
                  </div>
                </div>
              ))
            ) : (
              <p className="text-gray-500 text-center py-4">No blogs yet</p>
            )}
          </div>
          <Link
            to="/admin/blogs/new"
            className="mt-4 block w-full text-center bg-primary-600 text-white py-2 rounded-lg hover:bg-primary-700 transition-colors"
          >
            + Create New Blog
          </Link>
        </div>

        {/* Recent Contacts */}
        <div className="bg-white rounded-lg shadow-md p-6">
          <div className="flex items-center justify-between mb-4">
            <h2 className="text-xl font-bold">Recent Contacts</h2>
            <Link
              to="/admin/contacts"
              className="text-primary-600 hover:text-primary-700 text-sm font-medium"
            >
              View All ‚Üí
            </Link>
          </div>
          <div className="space-y-3">
            {recentContacts.length > 0 ? (
              recentContacts.map((contact) => (
                <div
                  key={contact._id}
                  className="p-3 border border-gray-200 rounded-lg hover:border-primary-300 transition-colors"
                >
                  <div className="flex items-start justify-between">
                    <div>
                      <h3 className="font-medium text-gray-900">{contact.name}</h3>
                      <p className="text-sm text-gray-600">{contact.email}</p>
                      <p className="text-sm text-gray-700 mt-1 line-clamp-2">
                        {contact.message}
                      </p>
                    </div>
                    <span
                      className={`text-xs px-2 py-1 rounded whitespace-nowrap ${
                        contact.status === 'new'
                          ? 'bg-blue-100 text-blue-800'
                          : contact.status === 'read'
                          ? 'bg-yellow-100 text-yellow-800'
                          : contact.status === 'replied'
                          ? 'bg-green-100 text-green-800'
                          : 'bg-gray-100 text-gray-800'
                      }`}
                    >
                      {contact.status}
                    </span>
                  </div>
                </div>
              ))
            ) : (
              <p className="text-gray-500 text-center py-4">No contacts yet</p>
            )}
          </div>
        </div>
      </div>

      {/* Quick Actions */}
      <div className="bg-white rounded-lg shadow-md p-6">
        <h2 className="text-xl font-bold mb-4">Quick Actions</h2>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          <Link
            to="/admin/blogs/new"
            className="flex items-center space-x-3 p-4 border-2 border-dashed border-gray-300 rounded-lg hover:border-primary-500 hover:bg-primary-50 transition-colors"
          >
            <span className="text-3xl">üìù</span>
            <div>
              <h3 className="font-semibold">Create Blog Post</h3>
              <p className="text-sm text-gray-600">Write a new article</p>
            </div>
          </Link>
          <Link
            to="/admin/gallery/upload"
            className="flex items-center space-x-3 p-4 border-2 border-dashed border-gray-300 rounded-lg hover:border-green-500 hover:bg-green-50 transition-colors"
          >
            <span className="text-3xl">üì§</span>
            <div>
              <h3 className="font-semibold">Upload Images</h3>
              <p className="text-sm text-gray-600">Add to gallery</p>
            </div>
          </Link>
          <Link
            to="/admin/contacts"
            className="flex items-center space-x-3 p-4 border-2 border-dashed border-gray-300 rounded-lg hover:border-orange-500 hover:bg-orange-50 transition-colors"
          >
            <span className="text-3xl">üìß</span>
            <div>
              <h3 className="font-semibold">Check Messages</h3>
              <p className="text-sm text-gray-600">View contact forms</p>
            </div>
          </Link>
        </div>
      </div>
    </div>
  );
};

export default Dashboard;
